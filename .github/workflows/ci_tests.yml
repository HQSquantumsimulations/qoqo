name: ci_tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - run: cargo clippy -- -D warnings

  unittests_check:
    name: unittests_check-${{ matrix.combinations.runs_on }}
    runs-on: ${{ matrix.combinations.runs_on }}
    strategy:
      matrix:
        combinations: [
          { runs_on: "macOS-latest", rust: "x86_64-apple-darwin" },
          { runs_on: "ubuntu-latest",  rust: "x86_64-unknown-linux-gnu" },
          { runs_on: "windows-latest", rust: "x86_64-pc-windows-msvc" },
        ]
        python: [
            {py: 3.6, interpreter: "python3.6"},
            {py: 3.7, interpreter: "python3.7"},
            {py: 3.8, interpreter: "python3.8"},
            {py: 3.9, interpreter: "python3.9"}
        ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.combinations.rust }}
          default: true
          components: rustfmt
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features
          cargo fmt --all -- --check
  
  doctest_check:
    name: unittests_check-${{ matrix.combinations.runs_on }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
      - run: |
          cargo test --doc --package=roqoqo

  code_coverage_roqoqo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - run: |
          RUSTFLAGS="-Zinstrument-coverage" RUSTDOCFLAGS="-Zinstrument-coverage" LLVM_PROFILE_FILE="coverage-%p-%m.profraw" cargo +nightly test --package=roqoqo --no-default-features
          cd roqoqo/
          grcov . --binary-path ../target/debug -s . -t lcov --branch --ignore-not-existing --ignore "cargo" --keep-only "src/*" -o coverage.lcov --ignore "/mod.rs" --ignore "/lib.rs" --ignore "*/_auto_generated_operations.rs"
          genhtml coverage.lcov -o ./coveragehtml/lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          # token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          directory: ./roqoqo/coveragehtml/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coveragehtml/codecov_report.txt
          verbose: true

  # format_check: # needs to run after test otherwise auogenerated files are not built
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         components: rustfmt
  #     - run: cargo fmt --all -- --check
